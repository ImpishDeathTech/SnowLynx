#! /usr/bin/lua5.4

--
-- snow
--
-- BSD 3-Clause License
--
-- Copyright (c) 2022, Christopher Stephen Rafuse
-- All rights reserved.
--
-- See LICENSE for details
--

require 'snowlynx'

-- set defaults:
--      1. look for a local snowtab file
--      2. set base mode to build
--      3. set default snowrc to local directory
--      4. for unix, default snowrc is also in /usr/share/snowlynx
SNOW_TAB   = './.snowtab'
SNOW_MODE  = 'build'
SNOW_RC    = './.snowrc'
SNOW_DEFRC = '/usr/share/snowlynx/.snowrc'

-- load cli arguments and run configuration
-- if it can't find the specified rc or a local rc
-- it will load the default rc in /usr/share/snowlynx
-- fuck off at any errors
snow.loadargs()

-- get HOME variable
HOME   = snow.home()
snowrc = false
flag   = false
e      = false

-- load the rc, fuck off with an error if it fails
flag, e = snow.loadrc()

if flag then
    snowrc = e
else
    snow.error(e, true)
end


flag, e = pcall(snowrc)

if not flag then
    snow.error(e, true)
end

-- once the run configuration is loaded, print the watermark, and load the given snowtab
-- the program will fuck off on an error if it fails to load this table
print(snow.watermark())

input, e = loadfile(SNOW_TAB)

if type(input) ~= 'function' then
    snow.error(e, true)
else
    flag = false
    e    = false
    
    flag, e = pcall(input)
    
    if flag then
        local snowtab = e 

        -- if it is a marked multitab, find the snowtab
        -- with the marked command as it's mode, do the command
        -- also if any of the first set of subtabs have subtabs, iterate through them first
        -- and exit from there
        if snowtab.mode == snow.multi then
            for _, v in pairs(snowtab.subtabs) do
                if v.mode == SNOW_MODE then
                    v.mode = v.submode

                    for _, v2 in pairs(v.subtabs) do
                        local command  = v2.mode
                        local snowexec = snow[command]
                        
                        v2.mode = v2.submode

                        if type(snowexec) == 'function' then
                            flag, e = pcall(snowexec, v2)
                            
                            if not flag then
                                snow.error(e, true)

                            elseif tonumber(e) and e ~= 0 then
                                snow.errorf("SnowLynx: !ERROR! code %d", e)
                                os.exit(e)
                            end
                        else
                            snow.error(command..' is not a valid command', true)
                        end
                    end

                    local snowexec = snow[SNOW_MODE]

                    if type(snowexec) == 'function' then
                        flag, e = pcall(snowexec, v)
                    
                        if not flag then
                            snow.error(e, true)

                        elseif tonumber(e) and e ~= 0 then
                            snow.errorf("SnowLynx: !ERROR! code %d", e)
                            os.exit(e)
                        end
                    else
                        snow.error(SNOW_MODE..' is not a valid command', true)
                    end
                end
            end
        -- else, if there are subtabs, do them first,
        -- then, do the main snowtab and exit from there
        elseif #snowtab.subtabs > 0 then
            local flag = false
            local e    = false

            for _, tab in pairs(snowtab.subtabs) do
                local command  = tab.mode
                local snowexec = snow[command]

                if type(snowexec) ~= 'function' then
                    snow.error(command..' is not a valid command', true)
                else
                    tab.mode = tab.submode

                    flag, e = pcall(snowexec, tab)

                    if not flag then
                        snow.error(e, true)

                    elseif tonumber(e) and e ~= 0 then
                        snow.errorf("SnowLynx: !ERROR! code %d", e)
                        os.exit(e)
                    end
                end
            end
            
            local snowexec = snow[SNOW_MODE]
            
            if type(snowexec) ~= 'function' then
                snow.error(SNOW_MODE..' is not a valid mode', true)
            else
                flag, e = pcall(snowexec, snowtab)
                
                if not flag then
                    snow.error(e, true)
                    
                elseif tonumber(e) and e ~= 0 then
                    snow.errorf("SnowLynx: !ERROR! code %d", e)
                    os.exit(e)
                end
            end
        -- else, just do the snow tab and exit from there
        -- any further errors will be reported
        else
            local snowexec = snow[SNOW_MODE]

            if type(snowexec) ~= 'function' then
                snow.error(SNOW_MODE..' is not a valid mode', true)
            else
                flag, e = pcall(snowexec, snowtab)

                if not flag then
                    snow.error(e, true)
                    
                elseif tonumber(e) and e ~= 0 then
                    snow.errorf("SnowLynx: !ERROR! code %d", e)
                    os.exit(e)
                end
            end
        end
    -- if the snowtab load does fail, the snow tab will be an error object
    -- so report that error
    else
        snow.error(e, true)
    end
end

print "Done ^,..,^"
